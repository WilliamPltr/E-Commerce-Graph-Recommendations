version: "3.9"
services:
  postgres:
    image: postgres:16
    container_name: gdbtp2_postgres
    environment:
      POSTGRES_DB: shop
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d shop"]
      interval: 5s
      timeout: 5s
      retries: 12
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d:ro

  neo4j:
    image: neo4j:5.20
    container_name: gdbtp2_neo4j
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc","graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_apoc_import_file_enabled: "true"
      NEO4J_apoc_export_file_enabled: "true"
      NEO4J_server_memory_heap_initial__size: 1G
      NEO4J_server_memory_heap_max__size: 2G
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/import:/import

  app:
    image: python:3.11-slim
    container_name: gdbtp2_app
    working_dir: /work
    environment:
      PGHOST: postgres
      PGPORT: "5432"
      PGUSER: app
      PGPASSWORD: app
      PGDATABASE: shop
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: password
    depends_on:
      - postgres
      - neo4j
    command: bash -lc "pip install -r /work/app/requirements.txt && bash /work/app/start.sh"
    volumes:
      - ./app:/work/app
      - ./scripts:/work/scripts
    ports:
      - "8000:8000"

  checks:
    image: python:3.11-slim
    container_name: gdbtp2_checks
    working_dir: /work
    depends_on:
      - app
      - postgres
      - neo4j
    command: bash -lc "apt-get update -y && apt-get install -y curl postgresql-client && pip install -r /work/app/requirements.txt && bash /work/scripts/check_containers.sh --container"
    volumes:
      - ./app:/work/app
      - ./scripts:/work/scripts

volumes:
  pgdata:
  neodata:


